
// -----------------------------------------------------------------------------
//
// Rem-calc
//
// NOTE:
//
// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of rem's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported: rem-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets: rem-calc((10, 20, 30, 40px)); 
// Optionally call with a different base (eg: 8px) to calculate rem: rem-calc(16px 32px 48px, 8px);
// If you require to comma separate your list: rem-calc((16px, 32px, 48), 8px);
//
// @author: Zurb Foundation
//
// -----------------------------------------------------------------------------

@function rem-calc($values, $base-value: $font-size-base-rem) {

    $max: length($values);
    
    @if $max == 1 { 
        @return convert-to-rem(nth($values, 1), $base-value);
    }
    
    $remValues: ();
    
    @for $i from 1 through $max {
        $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
    }
    
    @return $remValues;

}